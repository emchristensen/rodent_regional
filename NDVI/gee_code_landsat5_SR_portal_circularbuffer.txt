// Define some variables: 
//    buffer area around trapping plots, and start and end date
var buffersize = 350; // size of buffer around trapping center points (m)
var startdate = '1995-01-01';
var enddate = '2006-12-31';

// define circles around each trapping point
var Portal = ee.Geometry.Point([-106.080, 31.938]).buffer(buffersize); 

// function to calculate NDVI and add it to image as a band 
var addNDVI = function(image) {
  var ndvi = image.normalizedDifference(['B4', 'B3']).rename('NDVI');
  return image.addBands(ndvi);
};

// Cloud mask function from Examples > Cloud Masking > Landsat8 TOA
// Uses BQA quality band included in landsat TOA products
var maskL8 = function(image) {
  var qa = image.select('BQA');
  /// Check that the cloud bit (bit 4) is off.
  // See https://landsat.usgs.gov/collectionqualityband
  var mask = qa.bitwiseAnd(1 << 4).eq(0);
  return image.updateMask(mask);
}

// function from Examples > Cloud Masking > Landsat457
var cloudMaskL457 = function(image) {
  var qa = image.select('pixel_qa');
  // If the cloud bit (5) is set and the cloud confidence (7) is high
  // or the cloud shadow bit is set (3), then it's a bad pixel.
  var cloud = qa.bitwiseAnd(1 << 5)
          .and(qa.bitwiseAnd(1 << 7))
          .or(qa.bitwiseAnd(1 << 3))
  // Remove edge pixels that don't occur in all bands
  var mask2 = image.mask().reduce(ee.Reducer.min());
  return image.updateMask(cloud.not()).updateMask(mask2);
};

// function to calculate mean ndvi of each image clipped to polygon
var getmeanndvi = function(image) {
  var reducers = ee.Reducer.mean().combine({
    reducer2: ee.Reducer.count(),
    sharedInputs: true
  });
  // Get a dictionary of means on the original image.
  var means = image.reduceRegion({
    reducer: reducers,
    geometry: Portal,
    scale: 30});
  return ee.Feature(Portal, means);
}

//Load Landsat5 collection
var landsat5 = ee.ImageCollection('LANDSAT/LT05/C01/T1_SR')
  .filterDate(startdate, enddate)
  .filterBounds(Portal);


// test on single image
var singleimage = landsat5.first();
//Map.addLayer(singleimage, {bands: ['B4','B3','B2']});
//var test1 = maskL8(singleimage);
var test1 = cloudMaskL457(singleimage);
var test2 = addNDVI(test1);
var testmeanfeature = getmeanndvi(test2)
// Make a feature without geometry and set the properties to the dictionary of means.
//var feature = ee.Feature(null, testmean);
//print(singleimage)
//print(test2)
print(testmeanfeature)
Map.addLayer(test2, {bands: ['NDVI']}, 'masked')
//print(test2)


// Apply cloud mask and ndvi functions to entire collection
var maskedcollection = landsat5
  .map(cloudMaskL457)
  .map(addNDVI)
  .select('NDVI');
//Map.addLayer(maskedcollection)

var portalndvi = maskedcollection.map(getmeanndvi);
print(portalndvi)

// Export the feature collection
Export.table.toDrive({
  collection: portalndvi,
  description: 'Landsat5_SR_NDVI_Portal',
  fileFormat: 'CSV'
});

